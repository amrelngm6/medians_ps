import{_ as F,r as n,U as N,a as h,o as m,c as C,y as x,O,g as B,F as R,f as U,d as w,b as $,ai as j,m as z}from"./index.min.js";import{O as E,L as G,j as L}from"./index.es-BqyRJkQ3.min.js";const A={components:{GoogleMap:E,Polyline:G,CustomMarker:L},emits:["markerclicked"],setup(r,{emit:f}){const i=n(null),e=n(null),y=n(12),l=n([]),c=n([]),p=n([]),d=n({strokeColor:"#000000",strokeOpacity:.8,strokeWeight:2}),t=n(r.trip),g=(o,k="lat",a="lng",v)=>{let s=JSON.parse(JSON.stringify(o));return s.icon=r.conf.url+"uploads/images/"+v,s.marker_position={lat:parseFloat(o[k]),lng:parseFloat(o[a])},s.drag=!1,s};(()=>{l.value=[g(t.value,"pickup_latitude","pickup_longitude","car.svg")],l.value[l.value.length]=g(t.value,"destination_latitude","destination_longitude","destination.svg")})();const u=n({lat:0,lng:0}),_=n({lat:0,lng:0}),M=()=>{console.log(i),z.get("/maps/api/directions/json",{params:{origin:"30.059211362739,31.221850700676",destination:"30.033575780575,31.474631465971",key:"YOUR_API_KEY"}}).then(o=>{console.log(o)}).catch(o=>{console.log(o)})},V=async()=>{M();const k=`https://maps.googleapis.com/maps/api/directions/json?origin=${u.value.lat},${u.value.lng}&destination=${_.value.lat},${_.value.lng}&key=${r.system_setting.google_map_api}`;try{const a=await fetch(k);if(a.ok){const v=await a.json(),s=j(v.routes[0].overview_polyline.points);p.value=s,c.value={path:s,geodesic:!0,strokeColor:"#000",strokeOpacity:.9,strokeWeight:2}}else console.error("Failed to fetch route:",a.statusText)}catch(a){console.error("Error fetching route:",a)}};return N(()=>{u.value={lat:t.value.pickup_latitude,lng:t.value.pickup_longitude},e.value=u.value,_.value={lat:t.value.destination_latitude,lng:t.value.destination_longitude},V()}),{mapRef:i,markerClicked:o=>{f("markerclicked",o)},markers:l,mapCenter:e,mapZoom:y,polylinePath:c,routeCoordinates:p,polylineOptions:d}},props:["system_setting","trip","conf"]},D={class:"w-full overflow-auto"},J={style:{"text-align":"center"}},S=["src"];function T(r,f,i,e,y,l){const c=h("Polyline"),p=h("CustomMarker"),d=h("GoogleMap");return m(),C("div",D,[e.mapCenter?(m(),x(d,{"api-key":i.system_setting.google_map_api,ref:"mapRef",center:e.mapCenter,key:`${e.mapCenter.lat},${e.mapCenter.lng}`,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:e.mapZoom,style:{width:"100%",height:"calc(100vh - 100px)"}},{default:O(()=>[B(c,{options:e.polylinePath},null,8,["options"]),(m(!0),C(R,null,U(e.markers,(t,g)=>(m(),x(p,{options:{position:t.marker_position},onClick:P=>e.markerClicked(t)},{default:O(()=>[w("div",J,[w("img",{src:t.icon,width:"40",class:"rouned-full",height:"40",style:{"margin-top":"8px"}},null,8,S)])]),_:2},1032,["options","onClick"]))),256))]),_:1},8,["api-key","center","zoom"])):$("",!0)])}const b=F(A,[["render",T]]);export{b as t};
