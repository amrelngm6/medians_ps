import{_ as F,r as o,U as N,a as h,o as d,c as x,y as w,O,g as B,F as $,f as z,d as M,b as G,ai as L,m as R}from"./index.min.js";import{O as U,L as j,j as D}from"./index.es-BqyRJkQ3.min.js";const E={components:{GoogleMap:U,Polyline:j,CustomMarker:D},emits:["markerclicked"],setup(r,{emit:y}){const c=o(null),e=o(null),f=o(12),i=o([]),p=o([]),u=o([]),g=o({strokeColor:"#000000",strokeOpacity:.8,strokeWeight:2}),t=o(r.trip),_=(n,a="lat",s="lng",v)=>{let l=JSON.parse(JSON.stringify(n));return l.icon=r.conf.url+"uploads/images/"+v,l.marker_position={lat:parseFloat(n[a]),lng:parseFloat(n[s])},l.drag=!1,l};(()=>{i.value=[_(t.value,"pickup_latitude","pickup_longitude","car.svg")],i.value[i.value.length]=_(t.value,"destination_latitude","destination_longitude","destination.svg")})();const m=o({lat:0,lng:0}),k=o({lat:0,lng:0}),C=n=>{console.log(c.value),R.get(n,{params:{origin:"30.059211362739,31.221850700676",destination:"30.033575780575,31.474631465971",key:r.system_setting.google_map_api}}).then(a=>{console.log(a)}).catch(a=>{console.log(a)})},V=async()=>{C(a);const a=`https://maps.googleapis.com/maps/api/directions/json?origin=${m.value.lat},${m.value.lng}&destination=${k.value.lat},${k.value.lng}&key=${r.system_setting.google_map_api}`;C(a);try{const s=await fetch(a);if(s.ok){const v=await s.json(),l=L(v.routes[0].overview_polyline.points);u.value=l,p.value={path:l,geodesic:!0,strokeColor:"#000",strokeOpacity:.9,strokeWeight:2}}else console.error("Failed to fetch route:",s.statusText)}catch(s){console.error("Error fetching route:",s)}};return N(()=>{m.value={lat:t.value.pickup_latitude,lng:t.value.pickup_longitude},e.value=m.value,k.value={lat:t.value.destination_latitude,lng:t.value.destination_longitude},V()}),{mapRef:c,markerClicked:n=>{y("markerclicked",n)},markers:i,mapCenter:e,mapZoom:f,polylinePath:p,routeCoordinates:u,polylineOptions:g}},props:["system_setting","trip","conf"]},J={class:"w-full overflow-auto"},S={style:{"text-align":"center"}},T=["src"];function W(r,y,c,e,f,i){const p=h("Polyline"),u=h("CustomMarker"),g=h("GoogleMap");return d(),x("div",J,[e.mapCenter?(d(),w(g,{"api-key":c.system_setting.google_map_api,ref:"mapRef",center:e.mapCenter,key:`${e.mapCenter.lat},${e.mapCenter.lng}`,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:e.mapZoom,style:{width:"100%",height:"calc(100vh - 100px)"}},{default:O(()=>[B(p,{options:e.polylinePath},null,8,["options"]),(d(!0),x($,null,z(e.markers,(t,_)=>(d(),w(u,{options:{position:t.marker_position},onClick:P=>e.markerClicked(t)},{default:O(()=>[M("div",S,[M("img",{src:t.icon,width:"40",class:"rouned-full",height:"40",style:{"margin-top":"8px"}},null,8,T)])]),_:2},1032,["options","onClick"]))),256))]),_:1},8,["api-key","center","zoom"])):G("",!0)])}const q=F(E,[["render",W]]);export{q as t};
