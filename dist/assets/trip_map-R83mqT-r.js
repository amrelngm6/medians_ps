import{O as L,x as O,L as F,$ as b,j as I}from"./index.es-V2KqPL1g.js";import{_ as N,q as o,r as k,o as c,c as C,j as w,u as S,d as j,F as B,i as J}from"./index-mFo364Yv.js";const R={components:{GoogleMap:L,Marker:O,Polyline:F,InfoWindow:b,CustomMarker:I},name:"Map",emits:["click-marker","update-marker"],setup(i,{emit:u}){console.log(i.waypoints);const a=o(null),n=o(null),s=o(null),y=o("Driving"),g=o(14);o([]);const m=o([]),p=o({}),l=o({}),r=o({}),f=(t,e)=>{s.value=!0,_(t,e)},_=async(t,e)=>{r.value=e,u("click-marker",i.waypoints[e],e,JSON.parse(JSON.stringify(t)))},P=async t=>{let e=i.waypoints[r.value];e.latitude=t.latLng.lat(),e.longitude=t.latLng.lng(),e.address=await D(e.latitude,e.longitude),i.waypoints[r.value].destination={lat:e.latitude,lng:e.longitude},s.value=null,u("update-marker",e)},x=async(t,e)=>{const d=new google.maps.Geocoder,G={lat:parseFloat(t),lng:parseFloat(e)};return new Promise((z,h)=>{d.geocode({location:G},(v,M)=>{M==="OK"?v[0]?z(v[0]):h("No results found"):h(`Geocoder failed due to: ${M}`)})})},D=async(t,e)=>{try{return(await x(t,e)).formatted_address}catch(d){console.error(d)}};return{checkMarker:_,onMarkerDragStart:t=>{r.value=t},enableDrag:f,updateMarker:P,reload:a,render:n,showDrag:s,travelMode:y,origin:{lat:0,lng:0},destination:{lat:0,lng:0},zoom:g,markers:i.waypoints,polylineCoordinates:m,activeMarkerIndex:r,directionPoints:p,activeDestination:l}},props:["path","lang","setting","conf","auth","trip","waypoints","showroute","center"]},T={class:"w-full overflow-auto",style:{height:"85vh","z-index":"9999"}};function V(i,u,a,n,s,y){const g=k("DirectionsRenderer"),m=k("GmapMarker"),p=k("GmapMap");return c(),C("div",T,[(c(),w(p,{ref:"trip_map",center:a.center,key:a.waypoints,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:n.zoom,style:{width:"100%",height:"calc(100vh -  100px)"}},{default:S(()=>[a.showroute&&n.directionPoints?(c(),w(g,{destination:n.directionPoints.destination,origin:n.directionPoints.origin,key:n.directionPoints,travelMode:n.travelMode},null,8,["destination","origin","travelMode"])):j("",!0),(c(!0),C(B,null,J(a.waypoints,(l,r)=>(c(),w(m,{key:a.waypoints,position:l.origin,clickable:!0,draggable:!1,icon:l.icon?l.icon:null,onClick:f=>n.checkMarker(r)},null,8,["position","icon","onClick"]))),128))]),_:1},8,["center","zoom"]))])}const W=N(R,[["render",V]]);export{W as default};
