import{_ as F,r as n,U as L,a as f,o as v,c as x,y as O,O as D,g as R,F as E,f as G,d as k,b as I,ai as S}from"./index.min.js";import{O as $,L as z,j as U}from"./index.es-BqyRJkQ3.min.js";const b={components:{GoogleMap:$,Polyline:z,CustomMarker:U},emits:["markerclicked"],setup(u,{emit:C}){const d=n(null),a=n(null),w=n(12),r=n([]),p=n([]),m=n([]),h=n({strokeColor:"#000000",strokeOpacity:.8,strokeWeight:2}),s=n(u.trip),y=(l,e="lat",t="lng",i)=>{let o=JSON.parse(JSON.stringify(l));return o.icon=u.conf.url+"uploads/images/"+i,o.marker_position={lat:parseFloat(l[e]),lng:parseFloat(l[t])},o.drag=!1,o};(()=>{r.value=[y(s.value,"pickup_latitude","pickup_longitude","car.svg")],r.value[r.value.length]=y(s.value,"destination_latitude","destination_longitude","destination.svg")})();const c=n({lat:0,lng:0}),g=n({lat:0,lng:0}),M=n(null),_=n(null),T=l=>{console.log(window),setTimeout(function(){M.value=new window.google.maps.DirectionsService,_.value=new window.google.maps.DirectionsRenderer({draggable:!0,map:d,panel:document.getElementById("panel")}),_.value.addListener("directions_changed",()=>{const e=_.value.getDirections();e&&B(e)}),V(c.value,g.value,M.value,_.value)},2e3)},V=(l,e,t,i)=>{t.route({origin:l,destination:e,travelMode:google.maps.TravelMode.DRIVING,avoidTolls:!0}).then(o=>{console.log(o),i.setDirections(o)}).catch(o=>{alert("Could not display directions due to: "+o)})},B=l=>{let e=0;const t=l.routes[0];if(t){for(let i=0;i<t.legs.length;i++)e+=t.legs[i].distance.value;e=e/1e3,document.getElementById("total").innerHTML=e+" km"}},N=async()=>{const e=`https://maps.googleapis.com/maps/api/directions/json?origin=${c.value.lat},${c.value.lng}&destination=${g.value.lat},${g.value.lng}&key=${u.system_setting.google_map_api}`;T();try{const t=await fetch(e);if(t.ok){const i=await t.json(),o=S(i.routes[0].overview_polyline.points);m.value=o,p.value={path:o,geodesic:!0,strokeColor:"#000",strokeOpacity:.9,strokeWeight:2}}else console.error("Failed to fetch route:",t.statusText)}catch(t){console.error("Error fetching route:",t)}};return L(()=>{c.value={lat:s.value.pickup_latitude,lng:s.value.pickup_longitude},a.value=c.value,g.value={lat:s.value.destination_latitude,lng:s.value.destination_longitude},N()}),{map:d,markerClicked:l=>{C("markerclicked",l)},markers:r,mapCenter:a,mapZoom:w,polylinePath:p,routeCoordinates:m,polylineOptions:h}},props:["system_setting","trip","conf"]},j={class:"w-full overflow-auto"},J={style:{"text-align":"center"}},W=["src"],Z=k("div",{id:"panel"},null,-1),A=k("div",{id:"total"},null,-1);function H(u,C,d,a,w,r){const p=f("Polyline"),m=f("CustomMarker"),h=f("GoogleMap");return v(),x("div",j,[a.mapCenter?(v(),O(h,{"api-key":d.system_setting.google_map_api,ref:"map",center:a.mapCenter,key:`${a.mapCenter.lat},${a.mapCenter.lng}`,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:a.mapZoom,style:{width:"100%",height:"calc(100vh - 100px)"}},{default:D(()=>[R(p,{options:a.polylinePath},null,8,["options"]),(v(!0),x(E,null,G(a.markers,(s,y)=>(v(),O(m,{options:{position:s.marker_position},onClick:P=>a.markerClicked(s)},{default:D(()=>[k("div",J,[k("img",{src:s.icon,width:"40",class:"rouned-full",height:"40",style:{"margin-top":"8px"}},null,8,W)])]),_:2},1032,["options","onClick"]))),256))]),_:1},8,["api-key","center","zoom"])):I("",!0),Z,A])}const X=F(b,[["render",H]]);export{X as t};
