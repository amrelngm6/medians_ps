import{_ as P,r as t,V,a as f,o as m,c as y,y as C,O as w,g as F,F as N,f as B,d as x,b as $,aj as j}from"./index.min.js";import{O as z,L as G,j as L}from"./index.es-CjY_suAG.min.js";const E={components:{GoogleMap:z,Polyline:G,CustomMarker:L},emits:["markerclicked"],setup(c,{emit:h}){const p=t(null),e=t(12),r=t([]),d=t([]),u=t([]),g=t({strokeColor:"#000000",strokeOpacity:.8,strokeWeight:2}),o=t(c.trip),s=(l,k="lat",a="lng",v)=>{let n=JSON.parse(JSON.stringify(l));return n.icon=c.conf.url+"uploads/images/"+v,n.marker_position={lat:parseFloat(l[k]),lng:parseFloat(l[a])},n.drag=!1,n};(()=>{r.value=[s(o.value,"pickup_latitude","pickup_longitude","car.svg")],r.value[r.value.length]=s(o.value,"destination_latitude","destination_longitude","destination.svg")})();const i=t({lat:0,lng:0}),_=t({lat:0,lng:0}),M=async()=>{const k=`https://maps.googleapis.com/maps/api/directions/json?origin=${i.value.lat},${i.value.lng}&destination=${_.value.lat},${_.value.lng}&key=${c.system_setting.google_map_api}`;try{const a=await fetch(k);if(a.ok){const v=await a.json(),n=j(v.routes[0].overview_polyline.points);u.value=n,d.value={path:n,geodesic:!0,strokeColor:"#000",strokeOpacity:.9,strokeWeight:2}}else console.error("Failed to fetch route:",a.statusText)}catch(a){console.error("Error fetching route:",a)}};return V(()=>{i.value={lat:o.value.pickup_latitude,lng:o.value.pickup_longitude},p.value=i.value,_.value={lat:o.value.destination_latitude,lng:o.value.destination_longitude},M()}),{markerClicked:l=>{h("markerclicked",l)},markers:r,mapCenter:p,mapZoom:e,polylinePath:d,routeCoordinates:u,polylineOptions:g}},props:["system_setting","trip","conf"]},J={class:"w-full overflow-auto"},R={style:{"text-align":"center"}},S=["src"];function T(c,h,p,e,r,d){const u=f("Polyline"),g=f("CustomMarker"),o=f("GoogleMap");return m(),y("div",J,[e.mapCenter?(m(),C(o,{"api-key":p.system_setting.google_map_api,ref:"mapRef",center:e.mapCenter,key:`${e.mapCenter.lat},${e.mapCenter.lng}`,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:e.mapZoom,style:{width:"100%",height:"calc(100vh - 100px)"}},{default:w(()=>[F(u,{options:e.polylinePath},null,8,["options"]),(m(!0),y(N,null,B(e.markers,(s,O)=>(m(),C(g,{options:{position:s.marker_position},onClick:i=>e.markerClicked(s)},{default:w(()=>[x("div",R,[x("img",{src:s.icon,width:"40",class:"rouned-full",height:"40",style:{"margin-top":"8px"}},null,8,S)])]),_:2},1032,["options","onClick"]))),256))]),_:1},8,["api-key","center","zoom"])):$("",!0)])}const b=P(E,[["render",T]]);export{b as t};
