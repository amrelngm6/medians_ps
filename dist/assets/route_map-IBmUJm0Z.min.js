import{_ as V,f as n,R as F,r as v,o as g,c as C,g as x,A as w,a as N,F as B,k as $,i as O,h as z,S as E,T as G}from"./index.min.js";import{O as L,L as R,j as S}from"./index.es-9divdo6P.min.js";const T={components:{GoogleMap:L,Polyline:R,CustomMarker:S},emits:["markerclicked"],setup(c,{emit:f}){const u=n(null),e=n(12),s=n([]),_=n([]),p=n([]),k=n({strokeColor:"#000000",strokeOpacity:.8,strokeWeight:2}),o=n(c.route),l=(t,a="lat",m="lng",r)=>{let i=JSON.parse(JSON.stringify(t));return i.icon=c.conf.url+"uploads/images/"+r,i.marker_position={lat:parseFloat(t[a]),lng:parseFloat(t[m])},i.drag=!1,i};(()=>{s.value=[l(o.value.position,"start_latitude","start_longitude","car.svg")];let t=o.value.route_locations;if(t&&t.length)for(let a=0;a<t.length;a++)s.value[a+1]=l(t[a],"start_latitude","start_longitude","yellow_pin.gif");s.value[s.value.length]=l(o.value.position,"end_latitude","end_longitude","destination.svg")})();const d=n({lat:0,lng:0}),h=n({lat:0,lng:0}),P=async()=>{const a=`https://maps.googleapis.com/maps/api/directions/json?origin=${d.value.lat},${d.value.lng}&destination=${h.value.lat},${h.value.lng}&key=${c.system_setting.google_map_api}`;try{E.get(a).then(r=>{if(r.data){const i=r.data,y=G(i.routes[0].overview_polyline.points);p.value=y,_.value={path:y,geodesic:!0,strokeColor:"#000",strokeOpacity:.9,strokeWeight:2}}else console.error("Failed to fetch route:",r.statusText)}).catch(r=>{console.error("Error fetching data:",r)});const m=await fetch(a)}catch(m){console.error("Error fetching route:",m)}};return F(()=>{u.value={lat:30.0649,lng:31.21},d.value={lat:o.value.position.start_latitude,lng:o.value.position.start_longitude},h.value={lat:o.value.position.end_latitude,lng:o.value.position.end_longitude},P()}),{markerClicked:t=>{f("markerclicked",t)},markers:s,mapCenter:u,mapZoom:e,polylinePath:_,routeCoordinates:p,polylineOptions:k}},props:["system_setting","route","conf"]},J={class:"w-full overflow-auto"},U={style:{"text-align":"center"}},W=["src"];function Z(c,f,u,e,s,_){const p=v("Polyline"),k=v("CustomMarker"),o=v("GoogleMap");return g(),C("div",J,[e.mapCenter?(g(),x(o,{"api-key":u.system_setting.google_map_api,ref:"mapRef",center:e.mapCenter,key:`${e.mapCenter.lat},${e.mapCenter.lng}`,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:e.mapZoom,style:{width:"100%",height:"calc(100vh - 100px)"}},{default:w(()=>[N(p,{options:e.polylinePath},null,8,["options"]),(g(!0),C(B,null,$(e.markers,(l,M)=>(g(),x(k,{options:{position:l.marker_position},onClick:d=>e.markerClicked(l)},{default:w(()=>[O("div",U,[O("img",{src:l.icon,width:"40",class:"rouned-full",height:"40",style:{"margin-top":"8px"}},null,8,W)])]),_:2},1032,["options","onClick"]))),256))]),_:1},8,["api-key","center","zoom"])):z("",!0)])}const b=V(T,[["render",Z]]);export{b as r};
