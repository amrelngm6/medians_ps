import{_ as V,r as o,U as F,a as h,o as m,c as f,y as C,O as x,g as N,F as B,f as U,d as O,b as $,ai as j,m as z}from"./index.min.js";import{O as E,L as G,j as L}from"./index.es-BqyRJkQ3.min.js";const R={components:{GoogleMap:E,Polyline:G,CustomMarker:L},emits:["markerclicked"],setup(c,{emit:y}){const p=o(null),e=o(12),r=o([]),d=o([]),u=o([]),g=o({strokeColor:"#000000",strokeOpacity:.8,strokeWeight:2}),a=o(c.trip),l=(t,k="lat",n="lng",v)=>{let s=JSON.parse(JSON.stringify(t));return s.icon=c.conf.url+"uploads/images/"+v,s.marker_position={lat:parseFloat(t[k]),lng:parseFloat(t[n])},s.drag=!1,s};(()=>{r.value=[l(a.value,"pickup_latitude","pickup_longitude","car.svg")],r.value[r.value.length]=l(a.value,"destination_latitude","destination_longitude","destination.svg")})();const i=o({lat:0,lng:0}),_=o({lat:0,lng:0}),P=()=>{z.get("/maps/api/directions/json",{params:{origin:"30.059211362739,31.221850700676",destination:"30.033575780575,31.474631465971",key:"YOUR_API_KEY"}}).then(t=>{console.log(t)}).catch(t=>{console.log(t)})},M=async()=>{P();const k=`https://maps.googleapis.com/maps/api/directions/json?origin=${i.value.lat},${i.value.lng}&destination=${_.value.lat},${_.value.lng}&key=${c.system_setting.google_map_api}`;try{const n=await fetch(k);if(n.ok){const v=await n.json(),s=j(v.routes[0].overview_polyline.points);u.value=s,d.value={path:s,geodesic:!0,strokeColor:"#000",strokeOpacity:.9,strokeWeight:2}}else console.error("Failed to fetch route:",n.statusText)}catch(n){console.error("Error fetching route:",n)}};return F(()=>{i.value={lat:a.value.pickup_latitude,lng:a.value.pickup_longitude},p.value=i.value,_.value={lat:a.value.destination_latitude,lng:a.value.destination_longitude},M()}),{markerClicked:t=>{y("markerclicked",t)},markers:r,mapCenter:p,mapZoom:e,polylinePath:d,routeCoordinates:u,polylineOptions:g}},props:["system_setting","trip","conf"]},A={class:"w-full overflow-auto"},D={style:{"text-align":"center"}},J=["src"];function S(c,y,p,e,r,d){const u=h("Polyline"),g=h("CustomMarker"),a=h("GoogleMap");return m(),f("div",A,[e.mapCenter?(m(),C(a,{"api-key":p.system_setting.google_map_api,ref:"mapRef",center:e.mapCenter,key:`${e.mapCenter.lat},${e.mapCenter.lng}`,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:e.mapZoom,style:{width:"100%",height:"calc(100vh - 100px)"}},{default:x(()=>[N(u,{options:e.polylinePath},null,8,["options"]),(m(!0),f(B,null,U(e.markers,(l,w)=>(m(),C(g,{options:{position:l.marker_position},onClick:i=>e.markerClicked(l)},{default:x(()=>[O("div",D,[O("img",{src:l.icon,width:"40",class:"rouned-full",height:"40",style:{"margin-top":"8px"}},null,8,J)])]),_:2},1032,["options","onClick"]))),256))]),_:1},8,["api-key","center","zoom"])):$("",!0)])}const Z=V(R,[["render",S]]);export{Z as t};
