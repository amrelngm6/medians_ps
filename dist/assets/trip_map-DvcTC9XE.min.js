import{_ as L,H as S,L as W,O as E,j as n,I as F,r as C,c as N,o as k,x as O,a as J,b as f,z as V,f as Z,F as H,e as q}from"./index.min.js";const A={components:{GoogleMap:E,Polyline:W,CustomMarker:S},emits:["markerclicked"],setup(r,{emit:u}){const p=n(null),l=n(null),P=n(10),a=n([]),g=n([]),m=n([]),h=n({strokeColor:"#000000",strokeOpacity:.8,strokeWeight:2}),o=n(r.trip),c=n({lat:0,lng:0}),v=n({lat:0,lng:0}),x=n(null),_=n(null),M=()=>{if(o.value.status=="started")return{lat:Number(o.value.vehicle.latitude??0),lng:Number(o.value.vehicle.longitude??0)}},B=(e,t,i)=>{var s=e.model&&e.model.picture?e.model.picture:i,d=e.status=="waiting"?e.location.start_latitude:e.location.end_latitude,y=e.status=="waiting"?e.location.start_longitude:e.location.end_longitude;return w(o.value,{lat:d,lng:y},s)},w=(e,t,i="uploads/images/car.svg")=>{let s=JSON.parse(JSON.stringify(e));return s.icon=r.conf.url+i,s.marker_position=t,s.drag=!1,s},D=()=>{if(a.value=[w(o.value,M()??c.value,"uploads/images/car.svg")],console.log(a.value),r.waypoints)for(let t=0;t<r.waypoints.length;t++){var e=r.waypoints[t];(e.status=="waiting"||e.status=="moving")&&(a.value[t+1]=B(e))}a.value[a.value.length]=w(o.value,v.value,"uploads/images/destination.svg"),a.value=a.value.filter(t=>t!=null)},R=()=>{setTimeout(function(){x.value=new window.google.maps.DirectionsService,_.value=new window.google.maps.DirectionsRenderer({draggable:!0,map:p,panel:document.getElementById("panel")}),_.value.addListener("directions_changed",()=>{_.value.getDirections()}),T(c.value,v.value,x.value,_.value)},1e3)},T=(e,t,i,s)=>{i.route({origin:e,destination:t,waypoints:I(),travelMode:window.google.maps.TravelMode.DRIVING,avoidTolls:!0}).then(d=>{const y=z(d);m.value=y,g.value={path:y,geodesic:!0,strokeColor:"#000",strokeOpacity:.9,strokeWeight:2}}).catch(d=>{alert("Could not display directions due to: "+d)})},z=e=>{const t=e.routes[0].overview_polyline;return window.google.maps.geometry.encoding.decodePath(t).map(s=>({lat:s.lat(),lng:s.lng()}))},G=e=>{u("markerclicked",e)},I=()=>{var e=[];for(let t=0;t<a.value.length;t++){const i=a.value[t];i&&i.marker_position&&(e[t]={location:i.marker_position})}return console.log(e.filter(t=>t!=null)),e.length?e.filter(t=>t!=null):null};return F(()=>{c.value=M()??{lat:o.value.route.position.start_latitude,lng:o.value.route.position.start_longitude},l.value=c.value,v.value={lat:o.value.route.position.end_latitude,lng:o.value.route.position.end_longitude},D(),R()}),{map:p,markerClicked:G,markers:a,mapCenter:l,mapZoom:P,polylinePath:g,routeCoordinates:m,polylineOptions:h}},props:["system_setting","setting","trip","conf","waypoints","center"]},K={class:"w-full overflow-auto"},Q={style:{"text-align":"center"}},U=["src"];function X(r,u,p,l,P,a){const g=C("Polyline"),m=C("CustomMarker"),h=C("GoogleMap");return k(),N("div",K,[l.mapCenter?(k(),O(h,{"api-key":p.setting.google_map_api,ref:"map",center:l.mapCenter,key:`${l.mapCenter.lat},${l.mapCenter.lng}`,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:l.mapZoom,style:{width:"100%",height:"calc(100vh - 100px)"}},{default:V(()=>[Z(g,{options:l.polylinePath},null,8,["options"]),(k(!0),N(H,null,q(l.markers,(o,c)=>(k(),O(m,{options:o?{position:o.marker_position}:null,onClick:v=>l.markerClicked(o)},{default:V(()=>[f("div",Q,[f("img",{src:o.icon,width:"40",class:"rounded-full",height:"40",style:{"margin-top":"8px"}},null,8,U)])]),_:2},1032,["options","onClick"]))),256))]),_:1},8,["api-key","center","zoom"])):J("",!0),u[0]||(u[0]=f("div",{id:"panel"},null,-1)),u[1]||(u[1]=f("div",{id:"total"},null,-1))])}const $=L(A,[["render",X]]);export{$ as t};
