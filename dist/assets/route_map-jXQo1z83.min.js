import{_ as V,f as n,Z as F,r as h,o as g,c as C,l as x,G as w,a as N,F as B,j as G,g as O,i as $,Q as z,an as E}from"./index.min.js";import{O as L,L as Z,j}from"./index.es-dVNFsHlS.min.js";const J={components:{GoogleMap:L,Polyline:Z,CustomMarker:j},emits:["markerclicked"],setup(c,{emit:f}){const u=n(null),o=n(12),r=n([]),_=n([]),p=n([]),v=n({strokeColor:"#000000",strokeOpacity:.8,strokeWeight:2}),t=n(c.route),l=(e,a="lat",m="lng",s)=>{let i=JSON.parse(JSON.stringify(e));return i.icon=c.conf.url+"uploads/images/"+s,i.marker_position={lat:parseFloat(e[a]),lng:parseFloat(e[m])},i.drag=!1,i};(()=>{r.value=[l(t.value.position,"start_latitude","start_longitude","car.svg")];let e=t.value.route_locations;if(e&&e.length)for(let a=0;a<e.length;a++)r.value[a+1]=l(e[a],"start_latitude","start_longitude","yellow_pin.gif");r.value[r.value.length]=l(t.value.position,"end_latitude","end_longitude","destination.svg")})();const d=n({lat:0,lng:0}),k=n({lat:0,lng:0}),P=async()=>{const a=`https://maps.googleapis.com/maps/api/directions/json?origin=${d.value.lat},${d.value.lng}&destination=${k.value.lat},${k.value.lng}&key=${c.system_setting.google_map_api}`;try{z.get(a).then(s=>{if(s.data){const i=s.data,y=E(i.routes[0].overview_polyline.points);p.value=y,_.value={path:y,geodesic:!0,strokeColor:"#000",strokeOpacity:.9,strokeWeight:2}}else console.error("Failed to fetch route:",s.statusText)}).catch(s=>{console.error("Error fetching data:",s)});const m=await fetch(a)}catch(m){console.error("Error fetching route:",m)}};return F(()=>{u.value={lat:t.value.position.start_latitude,lng:t.value.position.start_longitude},d.value={lat:t.value.position.start_latitude,lng:t.value.position.start_longitude},k.value={lat:t.value.position.end_latitude,lng:t.value.position.end_longitude},P()}),{markerClicked:e=>{f("markerclicked",e)},markers:r,mapCenter:u,mapZoom:o,polylinePath:_,routeCoordinates:p,polylineOptions:v}},props:["system_setting","route","conf"]},R={class:"w-full overflow-auto"},S={style:{"text-align":"center"}},T=["src"];function U(c,f,u,o,r,_){const p=h("Polyline"),v=h("CustomMarker"),t=h("GoogleMap");return g(),C("div",R,[o.mapCenter?(g(),x(t,{"api-key":u.system_setting.google_map_api,ref:"mapRef",center:o.mapCenter,key:`${o.mapCenter.lat},${o.mapCenter.lng}`,options:{zoomControl:!0,mapTypeControl:!0,scaleControl:!0,streetViewControl:!0,rotateControl:!0,fullscreenControl:!0},zoom:o.mapZoom,style:{width:"100%",height:"calc(100vh - 100px)"}},{default:w(()=>[N(p,{options:o.polylinePath},null,8,["options"]),(g(!0),C(B,null,G(o.markers,(l,M)=>(g(),x(v,{options:{position:l.marker_position},onClick:d=>o.markerClicked(l)},{default:w(()=>[O("div",S,[O("img",{src:l.icon,width:"40",class:"rouned-full",height:"40",style:{"margin-top":"8px"}},null,8,T)])]),_:2},1032,["options","onClick"]))),256))]),_:1},8,["api-key","center","zoom"])):$("",!0)])}const b=V(J,[["render",U]]);export{b as r};
