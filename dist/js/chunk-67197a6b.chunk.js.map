{"version":3,"sources":["webpack:///./src/components/includes/map_direction.vue","webpack:///src/components/includes/map_direction.vue","webpack:///./src/components/includes/map_direction.vue?1840","webpack:///./src/components/includes/trip_map.vue","webpack:///src/components/includes/trip_map.vue","webpack:///./src/components/includes/trip_map.vue?ee1f","webpack:///./src/components/includes/trip_map.vue?3716"],"names":["render","staticRenderFns","MapElementFactory","name","ctr","window","google","maps","DirectionsRenderer","events","mappedProps","props","origin","type","Object","destination","travelMode","String","afterCreate","directionsRenderer","_this","directionsService","DirectionsService","$watch","route","response","status","setDirections","component","_vm","this","_c","_self","staticClass","staticStyle","key","center","ref","attrs","zoomControl","mapTypeControl","scaleControl","streetViewControl","rotateControl","fullscreenControl","zoom","_l","waypoints","marker","index","icon","on","$event","checkMarker","components","data","modes","activeMarkerIndex","reload","lat","lng","markers","polylineCoordinates","directionPoints","activeDestination","computed","mounted","t","setTimeout","onMapReady","methods","$refs","gmap","$mapObject","setInterval","trip","locations","parseFloat","vehicle","last_latitude","last_longitude","handleObject","conf","url","latitude","longitude","drag","_checkMarker","_asyncToGenerator","regeneratorRuntime","mark","_callee","i","wrap","_context","prev","next","handlePositionToPlaceId","address","sent","$emit","calculateAndDisplayRoute","stop","_x","apply","arguments","length","showroute","_t$directionPoints","LatLng","directionsDisplay","console","warn","_handlePositionToPlaceId","_callee2","place","_context2","getPlaceIdFromPosition","log","formatted_address","abrupt","t0","error","_x2","_x3","_getPlaceIdFromPosition","_callee3","geocoder","latLng","_context3","Geocoder","Promise","resolve","reject","geocode","location","results","concat","_x4","_x5","__","$root","$children"],"mappings":"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","file":"js/chunk-67197a6b.chunk.js","sourcesContent":["var render, staticRenderFns\nimport script from \"./map_direction.vue?vue&type=script&lang=js&\"\nexport * from \"./map_direction.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport { MapElementFactory } from \"vue2-google-maps\";\r\n\r\nexport default MapElementFactory({\r\n  name: \"directionsRenderer\",\r\n\r\n  ctr() { \r\n    return window.google.maps.DirectionsRenderer;\r\n  },\r\n\r\n  events: [],\r\n\r\n  mappedProps: {},\r\n\r\n  props: {\r\n    origin: { type: Object },\r\n    destination: { type: Object },\r\n    travelMode: { type: String }\r\n  },\r\n\r\n  afterCreate(directionsRenderer) {\r\n    let directionsService = new window.google.maps.DirectionsService();\r\n\r\n    this.$watch(\r\n      () => [this.origin, this.destination, this.travelMode],\r\n      () => {\r\n        let { origin, destination, travelMode } = this;\r\n        if (!origin || !destination || !travelMode) return;\r\n\r\n        directionsService.route(\r\n          {\r\n            origin,\r\n            destination,\r\n            travelMode\r\n          },\r\n          (response, status) => {\r\n            if (status !== \"OK\") return;\r\n            directionsRenderer.setDirections(response);\r\n          }\r\n        );\r\n      }\r\n    );\r\n  }\r\n});\r\n\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map_direction.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./map_direction.vue?vue&type=script&lang=js&\"","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"w-full overflow-auto\",staticStyle:{\"height\":\"85vh\",\"z-index\":\"9999\"}},[_c('GmapMap',{key:_vm.center,ref:\"gmap\",staticStyle:{\"width\":\"100%\",\"height\":\"calc(100vh -  100px)\"},attrs:{\"center\":_vm.center,\"options\":{\n                zoomControl: true,\n                mapTypeControl: true,\n                scaleControl: true,\n                streetViewControl: true,\n                rotateControl: true,\n                fullscreenControl: true\n            },\"zoom\":_vm.zoom}},_vm._l((_vm.waypoints),function(marker,index){return _c('GmapMarker',{key:_vm.waypoints,attrs:{\"position\":marker.destination,\"clickable\":true,\"draggable\":false,\"icon\":marker.icon ? marker.icon : null},on:{\"click\":function($event){return _vm.checkMarker(index)}}})}),1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"w-full  overflow-auto\" style=\"height: 85vh; z-index: 9999;\">\r\n        <GmapMap ref=\"gmap\" :center=\"center\" :key=\"center\" \r\n            :options=\"{\r\n                zoomControl: true,\r\n                mapTypeControl: true,\r\n                scaleControl: true,\r\n                streetViewControl: true,\r\n                rotateControl: true,\r\n                fullscreenControl: true\r\n            }\"\r\n            :zoom=\"zoom\" style=\"width: 100%; height: calc(100vh -  100px)\">\r\n\r\n<!--             \r\n            <DirectionsRenderer \r\n                v-if=\"showroute && directionPoints\"\r\n                :destination=\"directionPoints.destination\" \r\n                :origin=\"directionPoints.origin\"\r\n                :key=\"directionPoints\" \r\n                :travelMode=\"travelMode\" \r\n                 />\r\n                 -->\r\n            <GmapMarker\r\n                v-for=\"(marker, index) in waypoints\" \r\n                :key=\"waypoints\" \r\n                :position=\"marker.destination\"\r\n                :clickable=\"true\" \r\n                :draggable=\"false\" \r\n                :icon=\"marker.icon ? marker.icon : null\" \r\n                @click=\"checkMarker(index)\"\r\n                >\r\n            </GmapMarker> \r\n\r\n        </GmapMap>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nimport DirectionsRenderer from \"./map_direction.vue\";\r\n\r\nexport default\r\n    {\r\n        components: {\r\n            DirectionsRenderer,\r\n        },\r\n        name: 'Vehicles',\r\n        data() {\r\n            return {\r\n                modes: ['DRIVING', 'WALKING'],\r\n                activeMarkerIndex: 0,\r\n                reload: true,\r\n                render: true,\r\n                travelMode: 'DRIVING',\r\n                origin: { lat: 0, lng: 0 }, // Replace with your origin location\r\n                destination: { lat: 0, lng: 0 }, // Replace with your destination location\r\n                \r\n                zoom: 14,\r\n                markers: [\r\n                ],\r\n                \r\n                center: { lat: 0, lng: 0 }, \r\n                waypoints: [],\r\n                polylineCoordinates: [],\r\n                directionPoints: {},\r\n                activeDestination: {},\r\n            }\r\n\r\n        },\r\n\r\n        computed: {\r\n\r\n        },\r\n        props: [\r\n            'path',\r\n            'lang',\r\n            'setting',\r\n            'conf',\r\n            'auth',\r\n            'trip',\r\n            'showroute',\r\n            // 'waypoints',\r\n            // 'center',\r\n        ],\r\n        mounted() {\r\n            var t = this;\r\n\r\n            setTimeout(function(){\r\n                t.onMapReady()\r\n            }, 1000)\r\n        },\r\n\r\n        methods:\r\n        {\r\n\r\n            /**\r\n             * When map loaded is ready\r\n             * \r\n             * @param\r\n             */\r\n            onMapReady()\r\n            {\r\n                var t = this;\r\n                // t.directionsService = new window.google.maps.DirectionsService();\r\n                // t.directionsDisplay = new window.google.maps.DirectionsRenderer();\r\n\r\n                var map = this.$refs.gmap.$mapObject;\r\n                // this.directionsDisplay.setMap(map);\r\n\r\n                setInterval(() => {\r\n                    if (t.waypoints != t.trip.locations && t.trip.locations) {\r\n                        t.center = {lat: parseFloat(t.trip.vehicle.last_latitude), lng: parseFloat(t.trip.vehicle.last_longitude)}\r\n                        t.waypoints = t.trip.locations;\r\n                        // t.calculateAndDisplayRoute();\r\n                    }\r\n                }, 2000);\r\n            },\r\n\r\n            \r\n            /**\r\n            * Handle object\r\n            * @param {Model Object} i \r\n            */\r\n            handleObject(data) {\r\n                data.icon = this.conf ? (this.conf.url + 'uploads/images/blue_pin.gif') : ''\r\n                data.origin = data.destination = { lat: parseFloat(data.latitude), lng: parseFloat(data.longitude) }\r\n                data.drag = false;\r\n                return data;\r\n            },\r\n\r\n\r\n            async checkMarker(i)  {\r\n                this.activeDestination = this.waypoints[i].destination;\r\n                this.waypoints[i].address = await this.handlePositionToPlaceId(this.waypoints[i].destination.lat, this.waypoints[i].destination.lng);\r\n                this.$emit('click-marker', this.waypoints[i], i);\r\n                this.calculateAndDisplayRoute()\r\n            },\r\n            \r\n            \r\n            calculateAndDisplayRoute() {\r\n                var t = this;\r\n                if (window.google && this.waypoints.length && this.showroute) \r\n                {\r\n                    t.directionPoints = {origin: t.waypoints[0].destination, destination:t.waypoints[1].destination};\r\n                    var {origin, destination} = t.directionPoints;\r\n                    \r\n                    t.directionsService.route(\r\n                        {\r\n                            origin: new window.google.maps.LatLng(origin.lat, origin.lng),\r\n                            destination: this.activeDestination ? this.activeDestination : new window.google.maps.LatLng(destination.lat, destination.lng),\r\n                            travelMode: 'DRIVING'\r\n                        },\r\n                        (response, status) => {\r\n                            if (status === 'OK') {\r\n                                t.directionsDisplay.setDirections(response);\r\n                            } else {\r\n                                console.warn('Directions request failed due to ' + status);\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            },\r\n\r\n            async handlePositionToPlaceId(lat, lng) \r\n            {\r\n                try {\r\n                    const place = await this.getPlaceIdFromPosition(lat, lng);\r\n                    console.log('Place ID:', place.formatted_address);\r\n                    return place.formatted_address;\r\n                    // Perform actions with the retrieved placeId\r\n                } catch (error) {\r\n                    console.error(error);\r\n                    // Handle error if geocoding fails\r\n                }\r\n            },\r\n\r\n            async getPlaceIdFromPosition(lat, lng) {\r\n                const geocoder = new google.maps.Geocoder();\r\n\r\n                const latLng = { lat: parseFloat(lat), lng: parseFloat(lng) };\r\n\r\n                return new Promise((resolve, reject) => {\r\n                    geocoder.geocode({ location: latLng }, (results, status) => {\r\n                    if (status === 'OK') {\r\n                        results[0] ? resolve(results[0]) : reject('No results found');\r\n                    } else {\r\n                        reject(`Geocoder failed due to: ${status}`);\r\n                    }\r\n                    });\r\n                });\r\n            },\r\n                \r\n            __(i) {\r\n                return this.$root.$children[0].__(i);\r\n            }\r\n        }\r\n    };\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./trip_map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./trip_map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./trip_map.vue?vue&type=template&id=c9b3d786&\"\nimport script from \"./trip_map.vue?vue&type=script&lang=js&\"\nexport * from \"./trip_map.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}